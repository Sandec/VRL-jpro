// Note: "common.gradle" in the root project contains additional initialization
//       for this project. This initialization is applied in the "build.gradle"
//       of the root project.

if (!hasProperty('mainClass')) {
    ext.mainClass = 'eu.mihosoft.vrl.lang.model.Main'
}

apply plugin: 'groovy'

// additional code/class-files from subprojects
jar {
    from project("commentparser").sourceSets.main.output
}

if (project.getTasks().findByPath("sourcesJar")){
    sourcesJar {
        from project("commentparser").sourceSets.main.allSource
    }
}

if (project.getTasks().findByPath("javadocJar")){
    javadocJar {
        from project("commentparser").projectDir.path + '/build/docs/javadoc'
    }
}

dependencies {

    compile "com.google.guava:guava:14.0"
    
    compile group: 'eu.mihosoft.vrl.workflow', name: 'vworkflows-fx', version: '0.2.4.2', changing: true
    
//    compile ( 'eu.mihosoft.vrl.workflow-8.0:vworkflows-core:0.1-r2-SNAPSHOT' ) { changing = true }
//    compile group: 'eu.mihosoft.vrl.workflow-8.0', name: 'vworkflows-core', version:'0.1-r2-SNAPSHOT', classifier: 'sources'

    compile group: 'com.esotericsoftware', name: 'kryo', version: '3.0.3'
    compile group: 'com.esotericsoftware', name: 'kryo', version: '3.0.3', classifier: 'sources'

    compile group: 'uk.com.robust-it', name: 'cloning', version: '1.9.2'
    compile group: 'uk.com.robust-it', name: 'cloning', version: '1.9.2', classifier: 'sources'

    compile project("commentparser")

    compile project(":vrl-base")
    
    //compile files("C:\\Users\\miho\\Documents\\GitHub\\VWorkflows\\VWorkflows-Core\\build\\libs\\vworkflows-core-0.1-r2-SNAPSHOT.jar");
}

